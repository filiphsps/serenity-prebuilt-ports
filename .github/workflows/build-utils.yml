name: Build minimum utilities

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  build-serenity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: 📦 Install Ubuntu dependencies
        run: |
          sudo add-apt-repository -y ppa:canonical-server/server-backports
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y ccache e2fsprogs gcc-11 g++-11 libstdc++-11-dev libmpfr-dev libmpc-dev ninja-build qemu-utils qemu-system-i386 unzip

      - name: 🐞 Clone serenity repo
        run: git clone --depth 1 https://github.com/SerenityOS/serenity

      - name: 💾 Cache toolchain & build
        uses: actions/cache@v2
        with:
          key: serenity-tools
          path: |
            ./serenity/Build/
            ./serenity/Toolchain/Build
            ./serenity/Toolchain/Local
            ./serenity/Toolchain/Tarballs
            ./serenity/Ports/**/*.tar.*

      - name: 🔨 Build serenity
        run: ./Meta/serenity.sh build i686
        working-directory: ./serenity/

  build-gcc:
    runs-on: ubuntu-latest
    needs: build-serenity
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2

      - name: 📦 Install Ubuntu dependencies
        run: |
          sudo add-apt-repository -y ppa:canonical-server/server-backports
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y ccache e2fsprogs gcc-11 g++-11 libstdc++-11-dev libmpfr-dev libmpc-dev ninja-build qemu-utils qemu-system-i386 unzip

      - name: 🐞 Clone serenity repo
        run: git clone --depth 1 https://github.com/SerenityOS/serenity

      - name: 💾 Cache toolchain & build
        uses: actions/cache@v2
        with:
          key: serenity-tools
          path: |
            ./serenity/Build/
            ./serenity/Toolchain/Build
            ./serenity/Toolchain/Local
            ./serenity/Toolchain/Tarballs
            ./serenity/Ports/**/*.tar.*

      - name: 🔨 Build gcc
        run: ./package.sh
        working-directory: ./serenity/Ports/gcc/

      - name: 🤏 Compress gcc
        run: tar -C ./serenity/Build/i686/Root/usr/local -czvf gcc.tar.gz .
        
      - name: 🌎 Deploy gcc
        uses: actions/upload-artifact@v2
        with:
          name: gcc.tar.gz
          path: gcc.tar.gz

  build-make:
    runs-on: ubuntu-latest
    needs: build-serenity
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2

      - name: 📦 Install Ubuntu dependencies
        run: |
          sudo add-apt-repository -y ppa:canonical-server/server-backports
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y ccache e2fsprogs gcc-11 g++-11 libstdc++-11-dev libmpfr-dev libmpc-dev ninja-build qemu-utils qemu-system-i386 unzip

      - name: 🐞 Clone serenity repo
        run: git clone --depth 1 https://github.com/SerenityOS/serenity

      - name: 💾 Cache toolchain & build
        uses: actions/cache@v2
        with:
          key: serenity-tools
          path: |
            ./serenity/Build/
            ./serenity/Toolchain/Build
            ./serenity/Toolchain/Local
            ./serenity/Toolchain/Tarballs
            ./serenity/Ports/**/*.tar.*

      - name: 🔨 Build make
        run: ./package.sh
        working-directory: ./serenity/Ports/make/

      - name: 🤏 Compress make
        run: tar -C ./serenity/Build/i686/Root/usr/local -czvf make.tar.gz .
        
      - name: 🌎 Deploy make
        uses: actions/upload-artifact@v2
        with:
          name: make.tar.gz
          path: make.tar.gz

  build-binutils:
    runs-on: ubuntu-latest
    needs: build-serenity
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2

      - name: 📦 Install Ubuntu dependencies
        run: |
          sudo add-apt-repository -y ppa:canonical-server/server-backports
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y ccache e2fsprogs gcc-11 g++-11 libstdc++-11-dev libmpfr-dev libmpc-dev ninja-build qemu-utils qemu-system-i386 unzip

      - name: 🐞 Clone serenity repo
        run: git clone --depth 1 https://github.com/SerenityOS/serenity

      - name: 💾 Cache toolchain & build
        uses: actions/cache@v2
        with:
          key: serenity-tools
          path: |
            ./serenity/Build/
            ./serenity/Toolchain/Build
            ./serenity/Toolchain/Local
            ./serenity/Toolchain/Tarballs
            ./serenity/Ports/**/*.tar.*

      - name: 🔨 Build binutils
        run: ./package.sh
        working-directory: ./serenity/Ports/binutils/

      - name: 🔨 Build git
        run: ./package.sh
        working-directory: ./serenity/Ports/git/

      - name: 🤏 Compress binutils
        run: tar -C ./serenity/Build/i686/Root/usr/local -czvf binutils.tar.gz .
        
      - name: 🌎 Deploy binutils
        uses: actions/upload-artifact@v2
        with:
          name: binutils.tar.gz
          path: binutils.tar.gz

  build-git:
    runs-on: ubuntu-latest
    needs: build-serenity
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2

      - name: 📦 Install Ubuntu dependencies
        run: |
          sudo add-apt-repository -y ppa:canonical-server/server-backports
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y ccache e2fsprogs gcc-11 g++-11 libstdc++-11-dev libmpfr-dev libmpc-dev ninja-build qemu-utils qemu-system-i386 unzip

      - name: 🐞 Clone serenity repo
        run: git clone --depth 1 https://github.com/SerenityOS/serenity

      - name: 💾 Cache toolchain & build
        uses: actions/cache@v2
        with:
          key: serenity-tools
          path: |
            ./serenity/Build/
            ./serenity/Toolchain/Build
            ./serenity/Toolchain/Local
            ./serenity/Toolchain/Tarballs
            ./serenity/Ports/**/*.tar.*

      - name: 🔨 Build git
        run: ./package.sh
        working-directory: ./serenity/Ports/git/

      - name: 🤏 Compress git
        run: tar -C ./serenity/Build/i686/Root/usr/local -czvf git.tar.gz .
        
      - name: 🌎 Deploy git
        uses: actions/upload-artifact@v2
        with:
          name: git.tar.gz
          path: git.tar.gz
